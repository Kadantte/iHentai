<tab:TabActivity
    x:Class="iHentai.Activities.EHentai.GalleryActivity"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:iHentai.Activities"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Microsoft.UI.Xaml.Controls"
    xmlns:extensions="using:iHentai.Common.Extensions"
    xmlns:ehentai="using:iHentai.Services.EHentai"
    xmlns:core="using:iHentai.Services.Core"
    xmlns:controls1="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:controls2="using:iHentai.Controls"
    xmlns:model="using:iHentai.Services.EHentai.Model"
    xmlns:tab="using:iHentai.Common.Tab"
    xmlns:extensions1="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:behaviors="using:Microsoft.Toolkit.Uwp.UI.Animations.Behaviors"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:ui="using:iHentai.Common.UI"
    mc:Ignorable="d">

    <VisualStateManager.VisualStateGroups>
        <VisualStateGroup>
            <VisualState>
                <VisualState.StateTriggers>
                    <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                </VisualState.StateTriggers>
                <VisualState.Setters>
                    <Setter Target="Header.Margin" Value="16" />
                    <Setter Target="Header.CornerRadius" Value="{StaticResource CardCorner}" />
                    <Setter Target="DockShadow.Margin" Value="16" />
                    <Setter Target="DockShadowContainer.Visibility" Value="Visible" />
                </VisualState.Setters>
            </VisualState>
            <VisualState>
                <VisualState.StateTriggers>
                    <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                </VisualState.StateTriggers>
                <VisualState.Setters>
                    <Setter Target="Header.Margin" Value="16" />
                    <Setter Target="Header.CornerRadius" Value="{StaticResource CardCorner}" />
                    <Setter Target="DockShadow.Margin" Value="16" />
                    <Setter Target="DockShadowContainer.Visibility" Value="Visible" />
                </VisualState.Setters>
            </VisualState>
            <VisualState>
                <VisualState.StateTriggers>
                    <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                </VisualState.StateTriggers>
                <VisualState.Setters>
                    <Setter Target="Header.Margin" Value="0" />
                    <Setter Target="Header.CornerRadius" Value="0" />
                    <Setter Target="DockShadow.Margin" Value="0" />
                    <Setter Target="DockShadowContainer.Visibility" Value="Visible" />
                </VisualState.Setters>
            </VisualState>
        </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
    <Grid>
        <RefreshContainer extensions:RefreshContainerExtension.ItemsSource="{x:Bind ViewModel.Source}">
            <ScrollViewer extensions:ScrollViewerExtension.ItemsSource="{x:Bind ViewModel.Source}">
                <interactivity:Interaction.Behaviors>
                    <ui:QuickReturnHeaderBehavior2 HeaderElement="{x:Bind HeaderContainer}" />
                </interactivity:Interaction.Behaviors>
                <controls:ItemsRepeater ItemsSource="{x:Bind ViewModel.Source}">
                    <controls:ItemsRepeater.Layout>
                        <ui:StaggeredLayout DesiredColumnWidth="200" VerticalOffset="75" />
                    </controls:ItemsRepeater.Layout>
                    <controls:ItemsRepeater.ItemTemplate>
                        <DataTemplate x:DataType="model:EHGallery">
                            <controls2:AspectRatioView
                                ToolTipService.ToolTip="{x:Bind Title}"
                                Tag="{x:Bind}"
                                Tapped="AspectRatioView_Tapped"
                                Margin="4" WidthRequest="{x:Bind ThumbWidth}"
                                HeightRequest="{x:Bind ThumbHeight}">
                                <Grid>
                                    <controls1:ImageEx
                                        Source="{x:Bind Thumb}" IsCacheEnabled="True"
                                        Stretch="UniformToFill" />
                                    <Polygon
                                        Fill="{x:Bind ehentai:EHApi.GetCatColorBrush(Category)}"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Right"
                                        Points="40,40,0,0,40,0" />
                                    <TextBlock
                                        FontWeight="SemiBold" Padding="2"
                                        Text="{x:Bind ehentai:EHApi.GetLanguageTag(Title)}"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Right" RequestedTheme="Dark" />
                                </Grid>
                            </controls2:AspectRatioView>
                        </DataTemplate>
                    </controls:ItemsRepeater.ItemTemplate>
                </controls:ItemsRepeater>
            </ScrollViewer>
        </RefreshContainer>
        <Grid
            x:Name="HeaderContainer">
            <Grid Name="DockShadowContainer">
                <controls1:DropShadowPanel
                    x:Name="DockShadow"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    VerticalAlignment="Top"
                    Margin="16"
                    MaxWidth="600"
                    BlurRadius="20"
                    Width="{Binding ElementName=Header, Path=(extensions1:FrameworkElementExtensions.ActualWidth), Mode=OneWay}"
                    Height="{Binding ElementName=Header, Path=(extensions1:FrameworkElementExtensions.ActualHeight), Mode=OneWay}"
                    ShadowOpacity="0.6"
                    Color="Black">
                    <Border
                        Width="{Binding ElementName=Header, Path=(extensions1:FrameworkElementExtensions.ActualWidth), Mode=OneWay}"
                        Height="{Binding ElementName=Header, Path=(extensions1:FrameworkElementExtensions.ActualHeight), Mode=OneWay}" />
                </controls1:DropShadowPanel>
            </Grid>
            <ScrollViewer
                Name="Header"
                Margin="16"
                MaxWidth="600"
                VerticalScrollBarVisibility="Auto"
                extensions1:FrameworkElementExtensions.EnableActualSizeBinding="True"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                Background="{ThemeResource SystemControlAcrylicElementBrush}"
                CornerRadius="{StaticResource CardCorner}">
                <Grid Padding="8">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <StackPanel
                        Padding="8"
                        Orientation="Vertical"
                        Grid.Row="1" Grid.ColumnSpan="3"
                        Visibility="{x:Bind FilterToggleButton.IsChecked, Mode=OneWay}">
                        <ui:FixedColumnLayout DesiredColumnWidth="100" Margin="0,8,0,0">
                            <ui:FixedColumnLayout.Resources>
                                <Style TargetType="ToggleButton" BasedOn="{StaticResource DefaultToggleButtonStyle}">
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                </Style>
                            </ui:FixedColumnLayout.Resources>
                            <ToggleButton IsChecked="{x:Bind ViewModel.SearchOption.Doujinshi, Mode=TwoWay}"
                                          Content="Doujinshi" >
                                <ToggleButton.Resources>
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#f26f5f" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#f26f5f" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#ccf26f5f" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPointerOver" Color="#99f26f5f" />
                                    <SolidColorBrush x:Key="ToggleButtonBackground" Color="#33f26f5f" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPressed" Color="#33f26f5f" />
                                </ToggleButton.Resources>
                            </ToggleButton>
                            <ToggleButton IsChecked="{x:Bind ViewModel.SearchOption.Manga, Mode=TwoWay}"
                                          Content="Manga" >
                                <ToggleButton.Resources>
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#fcb417" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#fcb417" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#ccfcb417" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPointerOver" Color="#99fcb417" />
                                    <SolidColorBrush x:Key="ToggleButtonBackground" Color="#33fcb417" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPressed" Color="#33fcb417" />
                                </ToggleButton.Resources>
                            </ToggleButton>
                            <ToggleButton IsChecked="{x:Bind ViewModel.SearchOption.ArtistCG, Mode=TwoWay}"
                                          Content="Artist CG" >
                                <ToggleButton.Resources>
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#dde500" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#dde500" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#ccdde500" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPointerOver" Color="#99dde500" />
                                    <SolidColorBrush x:Key="ToggleButtonBackground" Color="#33dde500" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPressed" Color="#33dde500" />
                                </ToggleButton.Resources>
                            </ToggleButton>
                            <ToggleButton IsChecked="{x:Bind ViewModel.SearchOption.GameCG, Mode=TwoWay}"
                                          Content="Game CG" >
                                <ToggleButton.Resources>
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#05bf0b" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#05bf0b" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#cc05bf0b" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPointerOver" Color="#9905bf0b" />
                                    <SolidColorBrush x:Key="ToggleButtonBackground" Color="#3305bf0b" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPressed" Color="#3305bf0b" />
                                </ToggleButton.Resources>
                            </ToggleButton>
                            <ToggleButton IsChecked="{x:Bind ViewModel.SearchOption.Western, Mode=TwoWay}"
                                          Content="Western" >
                                <ToggleButton.Resources>
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#14e723" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#14e723" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#cc14e723" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPointerOver" Color="#9914e723" />
                                    <SolidColorBrush x:Key="ToggleButtonBackground" Color="#3314e723" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPressed" Color="#3314e723" />
                                </ToggleButton.Resources>
                            </ToggleButton>
                            <ToggleButton IsChecked="{x:Bind ViewModel.SearchOption.NonH, Mode=TwoWay}"
                                          Content="Non-H" >
                                <ToggleButton.Resources>
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#08d7e2" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#08d7e2" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#cc08d7e2" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPointerOver" Color="#9908d7e2" />
                                    <SolidColorBrush x:Key="ToggleButtonBackground" Color="#3308d7e2" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPressed" Color="#3308d7e2" />
                                </ToggleButton.Resources>
                            </ToggleButton>
                            <ToggleButton IsChecked="{x:Bind ViewModel.SearchOption.ImageSet, Mode=TwoWay}"
                                          Content="Image Set" >
                                <ToggleButton.Resources>
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#5f5fff" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#5f5fff" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#cc5f5fff" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPointerOver" Color="#995f5fff" />
                                    <SolidColorBrush x:Key="ToggleButtonBackground" Color="#335f5fff" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPressed" Color="#335f5fff" />
                                </ToggleButton.Resources>
                            </ToggleButton>
                            <ToggleButton IsChecked="{x:Bind ViewModel.SearchOption.Cosplay, Mode=TwoWay}"
                                          Content="Cosplay" >
                                <ToggleButton.Resources>
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#9755f5" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#9755f5" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#cc9755f5" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPointerOver" Color="#999755f5" />
                                    <SolidColorBrush x:Key="ToggleButtonBackground" Color="#339755f5" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPressed" Color="#339755f5" />
                                </ToggleButton.Resources>
                            </ToggleButton>
                            <ToggleButton IsChecked="{x:Bind ViewModel.SearchOption.AsianPorn, Mode=TwoWay}"
                                          Content="Asia Porn" >
                                <ToggleButton.Resources>
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#fe93ff" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#fe93ff" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#ccfe93ff" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPointerOver" Color="#99fe93ff" />
                                    <SolidColorBrush x:Key="ToggleButtonBackground" Color="#33fe93ff" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPressed" Color="#33fe93ff" />
                                </ToggleButton.Resources>
                            </ToggleButton>
                            <ToggleButton IsChecked="{x:Bind ViewModel.SearchOption.Misc, Mode=TwoWay}"
                                          Content="Misc" >
                                <ToggleButton.Resources>
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#9e9e9e" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#9e9e9e" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#cc9e9e9e" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPointerOver" Color="#999e9e9e" />
                                    <SolidColorBrush x:Key="ToggleButtonBackground" Color="#339e9e9e" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundPressed" Color="#339e9e9e" />
                                </ToggleButton.Resources>
                            </ToggleButton>
                        </ui:FixedColumnLayout>
                        <controls1:WrapPanel>
                            <controls1:WrapPanel.Resources>
                                <Style TargetType="CheckBox" BasedOn="{StaticResource DefaultCheckBoxStyle}">
                                    <Setter Property="Margin" Value="0,0,8,0"/>
                                </Style>
                            </controls1:WrapPanel.Resources>
                            <CheckBox IsChecked="{x:Bind ViewModel.SearchOption.SearchName, Mode=TwoWay}"
                                      Content="Search Gallery Name" />
                            <CheckBox IsChecked="{x:Bind ViewModel.SearchOption.SearchTags, Mode=TwoWay}"
                                      Content="Search Gallery Tags" />
                            <CheckBox IsChecked="{x:Bind ViewModel.SearchOption.SearchDescription, Mode=TwoWay}"
                                      Content="Search Gallery Description" />
                            <CheckBox IsChecked="{x:Bind ViewModel.SearchOption.SearchTorrentFileNames, Mode=TwoWay}"
                                      Content="Search Torrent Filenames" />
                            <CheckBox IsChecked="{x:Bind ViewModel.SearchOption.OnlyShowWithTorrents, Mode=TwoWay}"
                                      Content="Only Show Galleries With Torrents" />
                            <CheckBox IsChecked="{x:Bind ViewModel.SearchOption.SearchLowPowerTags, Mode=TwoWay}"
                                      Content="Search Low-Power Tags" />
                            <CheckBox IsChecked="{x:Bind ViewModel.SearchOption.SearchDownvotedTags, Mode=TwoWay}"
                                      Content="Search Downvoted Tags" />
                            <CheckBox IsChecked="{x:Bind ViewModel.SearchOption.ShowExpunged, Mode=TwoWay}"
                                      Content="Show Expunged Galleries" />
                        </controls1:WrapPanel>
                        <animations:Implicit.ShowAnimations>
                            <animations:OpacityAnimation From="0" To="1" Duration="0:0:0.3" />
                            <animations:TranslationAnimation From="0, -40, 0" To="0" Duration="0:0:0.3" />
                        </animations:Implicit.ShowAnimations>
                        <animations:Implicit.HideAnimations>
                            <animations:OpacityAnimation To="0" From="1" Duration="0:0:0.2" />
                            <animations:TranslationAnimation To="0, -40, 0" From="0" Duration="0:0:0.2" />
                        </animations:Implicit.HideAnimations>
                    </StackPanel>
                    <Button Style="{ThemeResource DateTimePickerFlyoutButtonStyle}">
                        <SymbolIcon Symbol="GlobalNavigationButton" />
                    </Button>
                    <AutoSuggestBox Grid.Column="1"
                                    Margin="8,0"
                                    Text="{x:Bind ViewModel.SearchOption.Keyword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <AutoSuggestBox.QueryIcon>
                            <SymbolIcon Symbol="Find" />
                        </AutoSuggestBox.QueryIcon>
                    </AutoSuggestBox>
                    <ToggleButton
                        IsChecked="{x:Bind ViewModel.SearchOption.AdvSearch, Mode=TwoWay}"
                        Grid.Column="2" Style="{ThemeResource DateTimePickerFlyoutButtonStyle}"
                        x:Name="FilterToggleButton">
                        <SymbolIcon Symbol="Filter" />
                    </ToggleButton>
                </Grid>
            </ScrollViewer>
            <animations:Implicit.ShowAnimations>
                <animations:OpacityAnimation From="0" To="1" Duration="0:0:0.3" />
                <animations:TranslationAnimation From="0, -40, 0" To="0" Duration="0:0:0.3" />
            </animations:Implicit.ShowAnimations>
            <animations:Implicit.HideAnimations>
                <animations:OpacityAnimation To="0" From="1" Duration="0:0:0.2" />
                <animations:TranslationAnimation To="0, -40, 0" From="0" Duration="0:0:0.2" />
            </animations:Implicit.HideAnimations>
        </Grid>
    </Grid>

</tab:TabActivity>